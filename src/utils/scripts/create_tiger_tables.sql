-- Create the buildings table
create table tiger_buildings (
  id bigint generated by default as identity primary key,
  type text not null,
  geometry jsonb not null,
  properties jsonb not null,
  created_at timestamp with time zone default now()
);

-- Create spatial index
create index tiger_buildings_geometry_idx on tiger_buildings using gist (
  cast(geometry->>'coordinates' as geometry)
);

-- Create function to get buildings within radius
create or replace function get_buildings_in_radius(
  search_lat double precision,
  search_lon double precision,
  radius_miles double precision
) returns table (
  type text,
  lat double precision,
  lon double precision
) language plpgsql as $$
begin
  return query
  select
    b.type,
    (b.geometry->>'coordinates'->0)::float as lon,
    (b.geometry->>'coordinates'->1)::float as lat
  from tiger_buildings b
  where ST_DWithin(
    ST_SetSRID(ST_MakePoint(search_lon, search_lat), 4326)::geography,
    ST_SetSRID(ST_MakePoint(
      (b.geometry->>'coordinates'->0)::float,
      (b.geometry->>'coordinates'->1)::float
    ), 4326)::geography,
    radius_miles * 1609.34  -- Convert miles to meters
  );
end;
$$; 