-- Enable PostGIS extension first
create extension if not exists postgis;

-- Create the buildings table
create table tiger_buildings (
  id bigint generated by default as identity primary key,
  type text not null,
  geometry jsonb not null,
  properties jsonb not null,
  created_at timestamp with time zone default now()
);

-- Create spatial index using PostGIS
create index tiger_buildings_geometry_idx on tiger_buildings using gist (
  ST_SetSRID(
    ST_GeomFromGeoJSON(geometry::text),
    4326
  )
);

-- Create function to get buildings within radius
CREATE OR REPLACE FUNCTION get_buildings_in_radius(
  search_lat double precision,
  search_lon double precision,
  radius_miles double precision
) RETURNS TABLE (
  type text,
  lat double precision,
  lon double precision
) AS $$
BEGIN
  RETURN QUERY
  SELECT 
    b.type,
    ST_Y(ST_Centroid(ST_GeomFromGeoJSON(b.geometry::text))) as lat,
    ST_X(ST_Centroid(ST_GeomFromGeoJSON(b.geometry::text))) as lon
  FROM tiger_buildings b
  WHERE ST_DWithin(
    ST_SetSRID(ST_MakePoint(search_lon, search_lat), 4326)::geography,
    ST_SetSRID(ST_GeomFromGeoJSON(b.geometry::text), 4326)::geography,
    radius_miles * 1609.34  -- Convert miles to meters
  );
END;
$$ LANGUAGE plpgsql;